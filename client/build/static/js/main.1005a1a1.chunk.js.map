{"version":3,"sources":["register.jsx","login.jsx","users.jsx","user.jsx","App.js","index.js"],"names":["Register","props","state","username","password","firstName","lastName","registrationComplete","data","error","name","value","newState","this","setState","request","method","headers","body","JSON","stringify","fetch","window","location","host","then","response","json","catch","className","href","action","htmlFor","type","id","placeholder","onChange","onUpdateField","target","onBlur","onClick","onClickButton","PureComponent","Login","loggedIn","loginError","status","class","Users","users","getUsers","width","colSpan","length","map","user","idx","User","getUser","console","log","readOnly","GetUser","useParams","App","data-toggle","data-target","aria-controls","aria-expanded","aria-label","path","children","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"kPAEqBA,E,kDACnB,WAAYC,GAAQ,IAAD,8BACjB,cAAMA,IACDC,MAAQ,CACTC,SAAU,GACVC,SAAU,GACVC,UAAW,GACXC,SAAU,GACVC,sBAAsB,EACtBC,MAAM,EACNC,OAAO,GATM,E,iDAanB,SAAcC,EAAMC,GAChB,IAAMC,EAAW,GACjBA,EAASF,GAAQC,EACjBE,KAAKC,SAASF,K,2BAGlB,WAAiB,IAAD,OACNG,EAAU,CACZC,OAAQ,OACRC,QAAS,CACL,eAAgB,oBAEpBC,KAAMC,KAAKC,UAAUP,KAAKX,QAG9BmB,MAAM,UAAD,OAAWC,OAAOC,SAASC,KAA3B,kBAAiDT,GACjDU,MAAK,SAAAC,GAAQ,OAAIA,EAASC,UAC1BF,MAAK,SAAAjB,GAAI,OAAI,EAAKM,SAAS,CAAEP,sBAAsB,EAAMC,YACzDoB,OAAM,SAAAnB,GAAK,OAAI,EAAKK,SAAS,CAAEL,e,oBAGxC,WAAU,IAAD,OACP,EAOII,KAAKX,MANLC,EADJ,EACIA,SACAC,EAFJ,EAEIA,SACAC,EAHJ,EAGIA,UACAC,EAJJ,EAIIA,SACAC,EALJ,EAKIA,qBACAE,EANJ,EAMIA,MAGJ,OACI,qCACKA,GACG,qBAAKoB,UAAU,QAAf,SACKV,KAAKC,UAAUX,KAGvBF,GACG,wEACyC,mBAAGuB,KAAK,SAAR,mBADzC,QAIFvB,GACE,sBAAKsB,UAAU,eAAf,UACI,4EACA,uBAAME,OAAO,IAAb,UACI,sBAAKF,UAAU,aAAf,UACI,uBAAOG,QAAQ,WAAf,uBACA,uBACIC,KAAK,OACLJ,UAAU,eACVK,GAAG,WACHC,YAAY,yBACZxB,MAAOR,EACPiC,SAAU,SAAC5B,GAAD,OAAU,EAAK6B,cAAc,WAAY7B,EAAK8B,OAAO3B,QAC/D4B,OAAQ,SAAC/B,GAAD,OAAU,EAAK6B,cAAc,WAAY7B,EAAK8B,OAAO3B,aAGrE,sBAAKkB,UAAU,aAAf,UACI,uBAAOG,QAAQ,WAAf,sBACA,uBACIC,KAAK,WACLJ,UAAU,eACVK,GAAG,WACHC,YAAY,WACZxB,MAAOP,EACPgC,SAAU,SAAC5B,GAAD,OAAU,EAAK6B,cAAc,WAAY7B,EAAK8B,OAAO3B,QAC/D4B,OAAQ,SAAC/B,GAAD,OAAU,EAAK6B,cAAc,WAAY7B,EAAK8B,OAAO3B,aAGrE,sBAAKkB,UAAU,aAAf,UACI,uBAAOG,QAAQ,YAAf,yBACA,uBACIC,KAAK,OACLJ,UAAU,eACVK,GAAG,YACHC,YAAY,mBACZxB,MAAON,EACP+B,SAAU,SAAC5B,GAAD,OAAU,EAAK6B,cAAc,YAAa7B,EAAK8B,OAAO3B,QAChE4B,OAAQ,SAAC/B,GAAD,OAAU,EAAK6B,cAAc,YAAa7B,EAAK8B,OAAO3B,aAGtE,sBAAKkB,UAAU,aAAf,UACI,uBAAOG,QAAQ,WAAf,wBACA,uBACIC,KAAK,OACLJ,UAAU,eACVK,GAAG,WACHC,YAAY,kBACZxB,MAAOL,EACP8B,SAAU,SAAC5B,GAAD,OAAU,EAAK6B,cAAc,WAAY7B,EAAK8B,OAAO3B,QAC/D4B,OAAQ,SAAC/B,GAAD,OAAU,EAAK6B,cAAc,WAAY7B,EAAK8B,OAAO3B,aAGrE,wBAAQsB,KAAK,SAASJ,UAAU,kBAAkBW,QAAS,kBAAM,EAAKC,iBAAtE,iC,GA7GcC,iBCAjBC,E,kDACjB,WAAY1C,GAAQ,IAAD,8BACf,cAAMA,IACDC,MAAQ,CACTC,SAAU,GACVC,SAAU,GACVwC,UAAU,EACVC,YAAY,GAND,E,iDAUnB,SAAcnC,EAAMC,GAChB,IAAMC,EAAW,GACjBA,EAASF,GAAQC,EACjBE,KAAKC,SAASF,K,2BAGlB,WAAiB,IAAD,OACNG,EAAU,CACZC,OAAQ,OACRC,QAAS,CACL,eAAgB,oBAEpBC,KAAMC,KAAKC,UAAUP,KAAKX,QAG9BmB,MAAM,UAAD,OAAWC,OAAOC,SAASC,KAA3B,cAA6CT,GAC7CU,MAAK,SAACC,GACqB,MAApBA,EAASoB,OACT,EAAKhC,SAAS,CAAE8B,UAAU,EAAMC,YAAY,IAE5C,EAAK/B,SAAS,CAAE+B,YAAY,EAAMD,UAAU,OAGnDhB,OAAM,SAAAnB,GAAK,OAAI,EAAKK,SAAS,CAAEL,e,oBAGxC,WAAU,IAAD,OACL,EAKII,KAAKX,MAJLC,EADJ,EACIA,SACAC,EAFJ,EAEIA,SACAwC,EAHJ,EAGIA,SACAC,EAJJ,EAIIA,WAGJ,OACI,qCACKA,GACG,qBAAKhB,UAAU,QAAf,mDAIHe,GACG,4CAIFA,GACE,sBAAKG,MAAM,QAAX,UACI,8CACA,uBAAMhB,OAAO,IAAb,UACI,sBAAKF,UAAU,aAAf,UACI,uBAAOG,QAAQ,WAAf,uBACA,uBACIC,KAAK,OACLJ,UAAU,eACVK,GAAG,WACHC,YAAY,yBACZxB,MAAOR,EACPiC,SAAU,SAAC5B,GAAD,OAAU,EAAK6B,cAAc,WAAY7B,EAAK8B,OAAO3B,QAC/D4B,OAAQ,SAAC/B,GAAD,OAAU,EAAK6B,cAAc,WAAY7B,EAAK8B,OAAO3B,aAGrE,sBAAKkB,UAAU,aAAf,UACI,uBAAOG,QAAQ,WAAf,sBACA,uBACIC,KAAK,WACLJ,UAAU,eACVK,GAAG,WACHC,YAAY,WACZxB,MAAOP,EACPgC,SAAU,SAAC5B,GAAD,OAAU,EAAK6B,cAAc,WAAY7B,EAAK8B,OAAO3B,QAC/D4B,OAAQ,SAAC/B,GAAD,OAAU,EAAK6B,cAAc,WAAY7B,EAAK8B,OAAO3B,aAGrE,wBAAQsB,KAAK,SAASJ,UAAU,kBAAkBW,QAAS,kBAAM,EAAKC,iBAAtE,iC,GArFOC,iBCAdM,E,kDACjB,WAAY/C,GAAQ,IAAD,8BACf,cAAMA,IAEDC,MAAQ,CACT+C,OAAO,EACPxC,OAAO,GAGX,EAAKyC,WARU,E,4CAWnB,WAAY,IAAD,OAQP7B,MAAM,UAAD,OAAWC,OAAOC,SAASC,KAA3B,cAPW,CACZR,OAAQ,MACRC,QAAS,CACL,eAAgB,sBAKnBQ,MAAK,SAAAC,GAAQ,OAAIA,EAASC,UAC1BF,MAAK,SAAAwB,GAAK,OAAI,EAAKnC,SAAS,CAAEmC,aAC9BrB,OAAM,SAAAnB,GAAK,OAAI,EAAKK,SAAS,CAAEL,e,oBAGxC,WACI,MAGII,KAAKX,MAFL+C,EADJ,EACIA,MACAxC,EAFJ,EAEIA,MAGJ,OACI,wBAAOoB,UAAU,kBAAkBsB,MAAM,MAAzC,UACI,gCACI,+BACI,oBAAItB,UAAU,oBAAd,gBACA,oBAAIA,UAAU,oBAAd,sBACA,oBAAIA,UAAU,oBAAd,wBACA,oBAAIA,UAAU,oBAAd,uBACA,oBAAIA,UAAU,oBAAd,uBAGR,mCACMoB,IAAUxC,GACR,6BACI,oBAAIoB,UAAU,SAASuB,QAAS,EAAhC,0BAGP3C,GACG,6BACI,oBAAIoB,UAAU,SAASuB,QAAS,EAAhC,oDAGW,KAAb,OAALH,QAAK,IAALA,OAAA,EAAAA,EAAOI,SACJ,6BACI,oBAAIxB,UAAU,SAASuB,QAAS,EAAhC,2CAGF,OAALH,QAAK,IAALA,OAAA,EAAAA,EAAOI,QAAS,GAAKJ,EAAMK,KAAI,SAACC,EAAMC,GAAP,OAC5B,+BACI,oBAAI3B,UAAS,iBAAY2B,EAAM,IAAM,EAAI,cAAgB,IAAzD,SAAgED,EAAKrB,KACrE,oBAAIL,UAAS,iBAAY2B,EAAM,IAAM,EAAI,cAAgB,IAAzD,SAAgED,EAAKpD,WACrE,oBAAI0B,UAAS,iBAAY2B,EAAM,IAAM,EAAI,cAAgB,IAAzD,SAAgED,EAAKlD,YACrE,oBAAIwB,UAAS,iBAAY2B,EAAM,IAAM,EAAI,cAAgB,IAAzD,SAAgED,EAAKjD,WACrE,oBAAIuB,UAAS,iBAAY2B,EAAM,IAAM,EAAI,cAAgB,IAAzD,SACI,mBAAG1B,KAAI,iBAAYR,OAAOC,SAASC,KAA5B,iBAAyC+B,EAAKrB,IAArD,oC,GAlEGQ,iBCAde,E,kDACjB,WAAYxD,GAAQ,IAAD,8BACf,cAAMA,IACDyD,UAELC,QAAQC,IAAI,YAAa3D,GAEzB,EAAKC,MAAQ,CACTqD,MAAM,EACN9C,OAAO,GARI,E,2CAYnB,WAAW,IAAD,OAQEyB,EAAOrB,KAAKZ,MAAZiC,GAERb,MAAM,UAAD,OAAWC,OAAOC,SAASC,KAA3B,sBAA6CU,GATlC,CACZlB,OAAQ,MACRC,QAAS,CACL,eAAgB,sBAOnBQ,MAAK,SAAAC,GAAQ,OAAIA,EAASC,UAC1BF,MAAK,SAAA8B,GAAI,OAAI,EAAKzC,SAAS,CAAEyC,YAC7B3B,OAAM,SAAAnB,GAAK,OAAI,EAAKK,SAAS,CAAEL,e,2BAGxC,SAAcC,EAAMC,GAChB,IAAMC,EAAW,GACjBA,EAASF,GAAQC,EACjBE,KAAKC,SAASF,K,2BAGlB,WAAiB,IAAD,OACNG,EAAU,CACZC,OAAQ,MACRC,QAAS,CACL,eAAgB,oBAEpBC,KAAMC,KAAKC,UAAUP,KAAKX,QAGtBqD,EAAS1C,KAAKX,MAAdqD,KAERlC,MAAM,UAAD,OAAWC,OAAOC,SAASC,KAA3B,sBAA6C+B,EAAKrB,IAAMnB,GACxDU,MAAK,SAAAC,GAAQ,OAAIA,EAASC,UAC1BF,MAAK,SAAAjB,GAAI,OAAIc,OAAOC,SAAW,YAC/BK,OAAM,SAAAnB,GAAK,OAAI,EAAKK,SAAS,CAAEL,e,oBAGxC,WAAU,IAAD,OACL,EAAwBI,KAAKX,MAArBqD,EAAR,EAAQA,KAAM9C,EAAd,EAAcA,MACd,EAKII,KAAKX,MALT,IACIC,gBADJ,MACeoD,EAAKpD,SADpB,MAEIC,gBAFJ,MAEemD,EAAKnD,SAFpB,MAGIC,iBAHJ,MAGgBkD,EAAKlD,UAHrB,MAIIC,gBAJJ,MAIeiD,EAAKjD,SAJpB,EAMA,OACI,sBAAKuB,UAAU,OAAf,WACM0B,IAAS9C,GACP,8CAEHA,GACG,sBAAMoB,UAAU,QAAhB,qCAEH0B,GACG,qCACI,yDACA,uBAAMxB,OAAO,IAAb,UACI,sBAAKF,UAAU,aAAf,UACI,uBAAOG,QAAQ,WAAf,uBACA,uBACIC,KAAK,OACLJ,UAAU,eACVK,GAAG,WACHC,YAAY,yBACZxB,MAAOR,EACP0D,UAAQ,OAGhB,sBAAKhC,UAAU,aAAf,UACI,uBAAOG,QAAQ,WAAf,sBACA,uBACIC,KAAK,WACLJ,UAAU,eACVK,GAAG,WACHC,YAAY,WACZxB,MAAOP,EACPgC,SAAU,SAAC5B,GAAD,OAAU,EAAK6B,cAAc,WAAY7B,EAAK8B,OAAO3B,QAC/D4B,OAAQ,SAAC/B,GAAD,OAAU,EAAK6B,cAAc,WAAY7B,EAAK8B,OAAO3B,aAGrE,sBAAKkB,UAAU,aAAf,UACI,uBAAOG,QAAQ,YAAf,yBACA,uBACIC,KAAK,OACLJ,UAAU,eACVK,GAAG,YACHC,YAAY,mBACZxB,MAAON,EACP+B,SAAU,SAAC5B,GAAD,OAAU,EAAK6B,cAAc,YAAa7B,EAAK8B,OAAO3B,QAChE4B,OAAQ,SAAC/B,GAAD,OAAU,EAAK6B,cAAc,YAAa7B,EAAK8B,OAAO3B,aAGtE,sBAAKkB,UAAU,aAAf,UACI,uBAAOG,QAAQ,WAAf,wBACA,uBACIC,KAAK,OACLJ,UAAU,eACVK,GAAG,WACHC,YAAY,kBACZxB,MAAOL,EACP8B,SAAU,SAAC5B,GAAD,OAAU,EAAK6B,cAAc,WAAY7B,EAAK8B,OAAO3B,QAC/D4B,OAAQ,SAAC/B,GAAD,OAAU,EAAK6B,cAAc,WAAY7B,EAAK8B,OAAO3B,aAGrE,wBAAQsB,KAAK,SAASJ,UAAU,kBAAkBW,QAAS,kBAAM,EAAKC,iBAAtE,iC,GAvHMC,iB,MCYlC,SAASoB,IACP,IAAM5B,EAAO6B,cAAP7B,GACN,OACG,cAAC,EAAD,CAAMA,GAAIA,IAqDA8B,MAjDf,WACE,OACE,sBAAKjB,MAAM,UAAX,UACE,sBAAKlB,UAAU,gDAAf,UACE,mBAAGA,UAAU,eAAeC,KAAK,IAAjC,mCACA,wBAAQD,UAAU,iBAAiBI,KAAK,SAASgC,cAAY,WAAWC,cAAY,0BAC5EC,gBAAc,yBAAyBC,gBAAc,QAAQC,aAAW,oBADhF,SAEE,sBAAMxC,UAAU,0BAGlB,qBAAKA,UAAU,2BAA2BK,GAAG,yBAA7C,SACE,qBAAIL,UAAU,qBAAd,UACE,oBAAIA,UAAU,WAAd,SACE,mBAAGA,UAAU,WAAWC,KAAK,YAA7B,wBAEF,oBAAID,UAAU,WAAd,SACE,mBAAGA,UAAU,WAAWC,KAAK,SAA7B,qBAEF,oBAAID,UAAU,WAAd,SACE,mBAAGA,UAAU,WAAWC,KAAK,SAA7B,kCAKR,qBAAKiB,MAAM,OAAX,SACE,cAAC,IAAD,UACE,eAAC,IAAD,WACE,cAAC,IAAD,CAAOuB,KAAK,YAAZ,SACE,cAAC,EAAD,MAEF,cAAC,IAAD,CAAOA,KAAK,SAAZ,SACE,cAAC,EAAD,MAEF,cAAC,IAAD,CAAOA,KAAK,SAAZ,SACE,cAAC,EAAD,MAEF,cAAC,IAAD,CAAOA,KAAK,YAAYC,SAAU,cAACT,EAAD,MAClC,cAAC,IAAD,CAAOQ,KAAK,IAAZ,SACE,wDCtDdE,IAASC,OACP,cAAC,IAAMC,WAAP,UACE,cAAC,EAAD,MAEFC,SAASC,eAAe,W","file":"static/js/main.1005a1a1.chunk.js","sourcesContent":["import React, { PureComponent } from 'react';\r\n\r\nexport default class Register extends PureComponent {\r\n  constructor(props) {\r\n    super(props);\r\n    this.state = {\r\n        username: '',\r\n        password: '',\r\n        firstName: '',\r\n        lastName: '',\r\n        registrationComplete: false,\r\n        data: false,\r\n        error: false,\r\n    };\r\n  }\r\n\r\n  onUpdateField(name, value) {\r\n      const newState = {}\r\n      newState[name] = value;\r\n      this.setState(newState);\r\n  }\r\n\r\n  onClickButton() {\r\n      const request = {\r\n          method: 'POST',\r\n          headers: {\r\n              'Content-Type': 'application/json',\r\n          },\r\n          body: JSON.stringify(this.state),\r\n      };\r\n\r\n      fetch(`http://${window.location.host}/api/users/new`, request)\r\n          .then(response => response.json())\r\n          .then(data => this.setState({ registrationComplete: true, data }))\r\n          .catch(error => this.setState({ error }));\r\n  }\r\n\r\n  render() {\r\n    const {\r\n        username,\r\n        password,\r\n        firstName,\r\n        lastName,\r\n        registrationComplete,\r\n        error,\r\n    } = this.state;\r\n\r\n    return (\r\n        <>\r\n            {error && (\r\n                <div className=\"error\">\r\n                    {JSON.stringify(error)}\r\n                </div>\r\n            )}\r\n            {registrationComplete && (\r\n                <div>\r\n                    Your account has been created please <a href=\"/login\">login</a>.\r\n                </div>\r\n            )}\r\n            {!registrationComplete && (\r\n                <div className=\"registration\">\r\n                    <h4>Please enter your registration information</h4>\r\n                    <form action=\"#\">\r\n                        <div className=\"form-group\">\r\n                            <label htmlFor=\"username\">Username:</label>\r\n                            <input\r\n                                type=\"text\"\r\n                                className=\"form-control\"\r\n                                id=\"username\"\r\n                                placeholder=\"Enter desired username\"\r\n                                value={username}\r\n                                onChange={(data) => this.onUpdateField('username', data.target.value)}\r\n                                onBlur={(data) => this.onUpdateField('username', data.target.value)}\r\n                            />\r\n                        </div>\r\n                        <div className=\"form-group\">\r\n                            <label htmlFor=\"password\">Password</label>\r\n                            <input\r\n                                type=\"password\"\r\n                                className=\"form-control\"\r\n                                id=\"password\"\r\n                                placeholder=\"Password\"\r\n                                value={password}\r\n                                onChange={(data) => this.onUpdateField('password', data.target.value)}\r\n                                onBlur={(data) => this.onUpdateField('password', data.target.value)}\r\n                            />\r\n                        </div>\r\n                        <div className=\"form-group\">\r\n                            <label htmlFor=\"firstName\">First Name:</label>\r\n                            <input\r\n                                type=\"text\"\r\n                                className=\"form-control\"\r\n                                id=\"firstName\"\r\n                                placeholder=\"Enter first name\"\r\n                                value={firstName}\r\n                                onChange={(data) => this.onUpdateField('firstName', data.target.value)}\r\n                                onBlur={(data) => this.onUpdateField('firstName', data.target.value)}\r\n                            />\r\n                        </div>\r\n                        <div className=\"form-group\">\r\n                            <label htmlFor=\"lastName\">Last Name:</label>\r\n                            <input\r\n                                type=\"text\"\r\n                                className=\"form-control\"\r\n                                id=\"lastName\"\r\n                                placeholder=\"Enter last name\"\r\n                                value={lastName}\r\n                                onChange={(data) => this.onUpdateField('lastName', data.target.value)}\r\n                                onBlur={(data) => this.onUpdateField('lastName', data.target.value)}\r\n                            />\r\n                        </div>\r\n                        <button type=\"button\" className=\"btn btn-primary\" onClick={() => this.onClickButton() }>Submit</button>\r\n                    </form>\r\n                </div>\r\n            )}\r\n        </>\r\n    )\r\n  }\r\n};","import React, { PureComponent } from 'react';\r\n\r\nexport default class Login extends PureComponent {\r\n    constructor(props) {\r\n        super(props);\r\n        this.state = {\r\n            username: '',\r\n            password: '',\r\n            loggedIn: false,\r\n            loginError: false,\r\n        };\r\n    }\r\n\r\n    onUpdateField(name, value) {\r\n        const newState = {}\r\n        newState[name] = value;\r\n        this.setState(newState);\r\n    }\r\n\r\n    onClickButton() {\r\n        const request = {\r\n            method: 'POST',\r\n            headers: {\r\n                'Content-Type': 'application/json',\r\n            },\r\n            body: JSON.stringify(this.state),\r\n        };\r\n\r\n        fetch(`http://${window.location.host}/api/login`, request)\r\n            .then((response) => {\r\n                if (response.status !== 404) {\r\n                    this.setState({ loggedIn: true, loginError: false });\r\n                } else {\r\n                    this.setState({ loginError: true, loggedIn: false });\r\n                }\r\n            })\r\n            .catch(error => this.setState({ error }));\r\n    }\r\n\r\n    render() {\r\n        const {\r\n            username,\r\n            password,\r\n            loggedIn,\r\n            loginError,\r\n        } = this.state;\r\n\r\n        return (\r\n            <>\r\n                {loginError && (\r\n                    <div className=\"error\">\r\n                        Username and password was not correct\r\n                    </div>\r\n                )}\r\n                {loggedIn && (\r\n                    <div>\r\n                        Welcome!\r\n                    </div>\r\n                )}\r\n                {!loggedIn && (\r\n                    <div class=\"login\">\r\n                        <h4>Please login</h4>\r\n                        <form action=\"#\">\r\n                            <div className=\"form-group\">\r\n                                <label htmlFor=\"username\">Username:</label>\r\n                                <input\r\n                                    type=\"text\"\r\n                                    className=\"form-control\"\r\n                                    id=\"username\"\r\n                                    placeholder=\"Enter desired username\"\r\n                                    value={username}\r\n                                    onChange={(data) => this.onUpdateField('username', data.target.value)}\r\n                                    onBlur={(data) => this.onUpdateField('username', data.target.value)}\r\n                                />\r\n                            </div>\r\n                            <div className=\"form-group\">\r\n                                <label htmlFor=\"password\">Password</label>\r\n                                <input\r\n                                    type=\"password\"\r\n                                    className=\"form-control\"\r\n                                    id=\"password\"\r\n                                    placeholder=\"Password\"\r\n                                    value={password}\r\n                                    onChange={(data) => this.onUpdateField('password', data.target.value)}\r\n                                    onBlur={(data) => this.onUpdateField('password', data.target.value)}\r\n                                />\r\n                            </div>\r\n                            <button type=\"button\" className=\"btn btn-primary\" onClick={() => this.onClickButton() }>Submit</button>\r\n                        </form>\r\n                    </div>\r\n                )}\r\n            </>\r\n        )\r\n    }\r\n};","import React, { PureComponent } from 'react';\r\n\r\nexport default class Users extends PureComponent {\r\n    constructor(props) {\r\n        super(props);\r\n\r\n        this.state = {\r\n            users: false,\r\n            error: false,\r\n        };\r\n\r\n        this.getUsers();\r\n    }\r\n\r\n    getUsers() {\r\n        const request = {\r\n            method: 'GET',\r\n            headers: {\r\n                'Content-Type': 'application/json',\r\n            },\r\n        };\r\n\r\n        fetch(`http://${window.location.host}/api/users`, request)\r\n            .then(response => response.json())\r\n            .then(users => this.setState({ users }))\r\n            .catch(error => this.setState({ error }));\r\n    }\r\n\r\n    render() {\r\n        const {\r\n            users,\r\n            error,\r\n        } = this.state;\r\n\r\n        return (\r\n            <table className=\"table-secondary\" width=\"50%\">\r\n                <thead>\r\n                    <tr>\r\n                        <th className=\"center table-dark\">ID</th>\r\n                        <th className=\"center table-dark\">Username</th>\r\n                        <th className=\"center table-dark\">First Name</th>\r\n                        <th className=\"center table-dark\">Last Name</th>\r\n                        <th className=\"center table-dark\">&nbsp;</th>\r\n                    </tr>\r\n                </thead>\r\n                <tbody>\r\n                    {!users && !error && (\r\n                        <tr>\r\n                            <td className=\"center\" colSpan={5}>Loading...</td>\r\n                        </tr>\r\n                    )}\r\n                    {error && (\r\n                        <tr>\r\n                            <td className=\"center\" colSpan={5}>There was an error loading the users</td>\r\n                        </tr>\r\n                    )}\r\n                    {users?.length === 0 && (\r\n                        <tr>\r\n                            <td className=\"center\" colSpan={5}>There are no users to list</td>\r\n                        </tr>\r\n                    )}\r\n                    {users?.length > 0 && users.map((user, idx) => (\r\n                        <tr>\r\n                            <td className={`center ${idx % 2 === 0 ? 'table-light' : ''}`}>{user.id}</td>\r\n                            <td className={`center ${idx % 2 === 0 ? 'table-light' : ''}`}>{user.username}</td>\r\n                            <td className={`center ${idx % 2 === 0 ? 'table-light' : ''}`}>{user.firstName}</td>\r\n                            <td className={`center ${idx % 2 === 0 ? 'table-light' : ''}`}>{user.lastName}</td>\r\n                            <td className={`center ${idx % 2 === 0 ? 'table-light' : ''}`}>\r\n                                <a href={`http://${window.location.host}/user/${user.id}`}>Edit</a>\r\n                            </td>\r\n                        </tr>\r\n                    ))}\r\n                </tbody>\r\n            </table>\r\n        );\r\n    }\r\n}","import React, { PureComponent } from 'react';\r\n\r\nexport default class User extends PureComponent {\r\n    constructor(props) {\r\n        super(props);\r\n        this.getUser();\r\n\r\n        console.log('props => ', props);\r\n\r\n        this.state = {\r\n            user: false,\r\n            error: false,\r\n        };\r\n    }\r\n\r\n    getUser() {\r\n        const request = {\r\n            method: 'GET',\r\n            headers: {\r\n                'Content-Type': 'application/json',\r\n            },\r\n        };\r\n\r\n        const { id } = this.props;\r\n\r\n        fetch(`http://${window.location.host}/api/users/${id}`, request)\r\n            .then(response => response.json())\r\n            .then(user => this.setState({ user }))\r\n            .catch(error => this.setState({ error }));\r\n    }\r\n\r\n    onUpdateField(name, value) {\r\n        const newState = {}\r\n        newState[name] = value;\r\n        this.setState(newState);\r\n    }\r\n\r\n    onClickButton() {\r\n        const request = {\r\n            method: 'PUT',\r\n            headers: {\r\n                'Content-Type': 'application/json',\r\n            },\r\n            body: JSON.stringify(this.state),\r\n        };\r\n\r\n        const { user } = this.state;\r\n\r\n        fetch(`http://${window.location.host}/api/users/${user.id}`, request)\r\n            .then(response => response.json())\r\n            .then(data => window.location = '/users')\r\n            .catch(error => this.setState({ error }));\r\n    }\r\n\r\n    render() {\r\n        const { user, error } = this.state;\r\n        const {\r\n            username = user.username,\r\n            password = user.password,\r\n            firstName = user.firstName,\r\n            lastName = user.lastName,\r\n        } = this.state;\r\n        return (\r\n            <div className=\"User\">\r\n                {!user && !error && (\r\n                    <span>Loading...</span>\r\n                )}\r\n                {error && (\r\n                    <span className=\"error\">Oops there was an error</span>\r\n                )}\r\n                {user && (\r\n                    <>\r\n                        <h4>Update user information</h4>\r\n                        <form action=\"#\">\r\n                            <div className=\"form-group\">\r\n                                <label htmlFor=\"username\">Username:</label>\r\n                                <input\r\n                                    type=\"text\"\r\n                                    className=\"form-control\"\r\n                                    id=\"username\"\r\n                                    placeholder=\"Enter desired username\"\r\n                                    value={username}\r\n                                    readOnly\r\n                                />\r\n                            </div>\r\n                            <div className=\"form-group\">\r\n                                <label htmlFor=\"password\">Password</label>\r\n                                <input\r\n                                    type=\"password\"\r\n                                    className=\"form-control\"\r\n                                    id=\"password\"\r\n                                    placeholder=\"Password\"\r\n                                    value={password}\r\n                                    onChange={(data) => this.onUpdateField('password', data.target.value)}\r\n                                    onBlur={(data) => this.onUpdateField('password', data.target.value)}\r\n                                />\r\n                            </div>\r\n                            <div className=\"form-group\">\r\n                                <label htmlFor=\"firstName\">First Name:</label>\r\n                                <input\r\n                                    type=\"text\"\r\n                                    className=\"form-control\"\r\n                                    id=\"firstName\"\r\n                                    placeholder=\"Enter first name\"\r\n                                    value={firstName}\r\n                                    onChange={(data) => this.onUpdateField('firstName', data.target.value)}\r\n                                    onBlur={(data) => this.onUpdateField('firstName', data.target.value)}\r\n                                />\r\n                            </div>\r\n                            <div className=\"form-group\">\r\n                                <label htmlFor=\"lastName\">Last Name:</label>\r\n                                <input\r\n                                    type=\"text\"\r\n                                    className=\"form-control\"\r\n                                    id=\"lastName\"\r\n                                    placeholder=\"Enter last name\"\r\n                                    value={lastName}\r\n                                    onChange={(data) => this.onUpdateField('lastName', data.target.value)}\r\n                                    onBlur={(data) => this.onUpdateField('lastName', data.target.value)}\r\n                                />\r\n                            </div>\r\n                            <button type=\"button\" className=\"btn btn-primary\" onClick={() => this.onClickButton() }>Submit</button>\r\n                        </form>\r\n                    </>\r\n                )}\r\n            </div>\r\n        );\r\n    }\r\n}","import {\n  BrowserRouter as Router,\n  Switch,\n  Route,\n  useParams,\n} from \"react-router-dom\";\n\nimport Register from \"./register\";\nimport Login from \"./login\";\nimport Users from \"./users\";\nimport User from \"./user\";\n\nimport './App.css';\n\nfunction GetUser() {\n  let { id } = useParams();\n  return (\n     <User id={id} />\n  );\n}\n\nfunction App() {\n  return (\n    <div class=\"content\">\n      <nav className=\"navbar navbar-expand-lg navbar-light bg-light\">\n        <a className=\"navbar-brand\" href=\"#\">Cloud Test Deployment</a>\n        <button className=\"navbar-toggler\" type=\"button\" data-toggle=\"collapse\" data-target=\"#navbarSupportedContent\"\n                aria-controls=\"navbarSupportedContent\" aria-expanded=\"false\" aria-label=\"Toggle navigation\">\n          <span className=\"navbar-toggler-icon\"></span>\n        </button>\n\n        <div className=\"collapse navbar-collapse\" id=\"navbarSupportedContent\">\n          <ul className=\"navbar-nav mr-auto\">\n            <li className=\"nav-item\">\n              <a className=\"nav-link\" href=\"/register\">Register</a>\n            </li>\n            <li className=\"nav-item\">\n              <a className=\"nav-link\" href=\"/login\">Login</a>\n            </li>\n            <li className=\"nav-item\">\n              <a className=\"nav-link\" href=\"/users\">List Users</a>\n            </li>\n          </ul>\n        </div>\n      </nav>\n      <div class=\"body\">\n        <Router>\n          <Switch>\n            <Route path=\"/register\">\n              <Register />\n            </Route>\n            <Route path=\"/login\">\n              <Login />\n            </Route>\n            <Route path=\"/users\">\n              <Users />\n            </Route>\n            <Route path=\"/user/:id\" children={<GetUser />} />\n            <Route path=\"/\">\n              <div>\n                Welcome!\n              </div>\n            </Route>\n          </Switch>\n        </Router>\n      </div>\n    </div>\n  );\n}\n\nexport default App;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n"],"sourceRoot":""}